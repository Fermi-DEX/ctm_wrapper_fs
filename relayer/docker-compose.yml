version: '3.8'

services:
  # Nginx reverse proxy and HTTPS redirect
  nginx:
    image: nginx:alpine
    container_name: continuum-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    networks:
      - continuum-network
    depends_on:
      - relayer

  relayer:
    build: .
    container_name: continuum-relayer
    restart: unless-stopped
    # Remove external port mapping as nginx will handle it
    expose:
      - "8080"
    environment:
      - NODE_ENV=production
      - PORT=8080
      - LOG_LEVEL=info
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - ./relayer-keypair.json:/app/relayer-keypair.json:ro
    networks:
      - continuum-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Redis for caching and rate limiting
  redis:
    image: redis:7-alpine
    container_name: continuum-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - continuum-network
    command: redis-server --save 60 1 --loglevel warning

  # Optional: Prometheus for metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: continuum-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    networks:
      - continuum-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'

  # Optional: Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: continuum-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - continuum-network
    depends_on:
      - prometheus

networks:
  continuum-network:
    driver: bridge

volumes:
  redis-data:
  prometheus-data:
  grafana-data: